[tool.poetry]
name = "newstalk-ai"
version = "0.1.0"
description = "NewsTalk AI - Intelligent News Service with 95% Fact-checking Accuracy & Real-time Processing"
authors = ["NewsTalk AI Team <team@newstalk.ai>"]
readme = "README.md"
packages = [{include = "backend"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

# ðŸŽ¯ Backend Framework (Stage 4)
fastapi = "^0.115.13"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
slowapi = "^0.1.9"
python-multipart = "^0.0.9"

# ðŸŽ¯ Apache Airflow (Stage 2) - Updated for compatibility
apache-airflow = "^2.10.0"  # Required for latest providers
apache-airflow-providers-postgres = "^5.10.0"
apache-airflow-providers-redis = "^3.7.0"
apache-airflow-providers-http = "^4.11.0"
apache-airflow-providers-apache-kafka = "^1.4.0"

# ðŸŽ¯ LangGraph 0.4.8 & LangChain (Stage 3)
langgraph = "^0.2.0"  # Latest stable, 0.4.8 not available yet
langchain = "^0.3.0"
langchain-openai = "^0.2.0"
langchain-core = "^0.3.0"
langchain-community = "^0.3.0"

# ðŸŽ¯ Database & Storage (Airflow 2.10+ compatible)
sqlalchemy = "^1.4.36"
alembic = "^1.13.0"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"

# ðŸŽ¯ Redis 8.0 compatible & Caching (Stage 6)
redis = "^5.1.0"
aioredis = "^2.0.1"

# ðŸŽ¯ Apache Kafka 3.6 & Streaming (Stage 6)
kafka-python = "^2.0.2"
aiokafka = "^0.11.0"
confluent-kafka = "^2.6.0"

# ðŸŽ¯ AI/ML Core (OpenAI API 1.88.0, Stage 3)
openai = "^1.51.0"  # Latest stable
transformers = "^4.45.0"
torch = "^2.1.0"
numpy = "^1.26.0"
scikit-learn = "^1.4.0"
pandas = "^2.2.0"

# ðŸŽ¯ Voice Processing & TTS (Stage 3)
pydub = "^0.25.1"
librosa = "^0.10.1"
soundfile = "^0.12.1"

# ðŸŽ¯ Web Scraping & Content Processing (Stage 2)
beautifulsoup4 = "^4.12.2"
feedparser = "^6.0.10"
requests = "^2.31.0"
aiohttp = "^3.9.1"
scrapy = "^2.11.0"

# ðŸŽ¯ Data Processing & NLP (Stage 3)
spacy = "^3.7.2"
textblob = "^0.17.1"

# ðŸŽ¯ Monitoring & Observability (Langfuse 3.0.2, Stage 7)
langfuse = "^2.46.0"  # Latest stable
prometheus-client = "^0.20.0"
grafana-api = "^1.0.3"

# ðŸŽ¯ Authentication & Security (Stage 4)
python-jose = "^3.3.0"
passlib = "^1.7.4"
bcrypt = "^4.2.0"

# ðŸŽ¯ Async & Concurrency
asyncio = "^3.4.3"
aiofiles = "^24.1.0"
celery = "^5.3.0"

# ðŸŽ¯ Configuration & Environment
pydantic = "^2.9.0"
pydantic-settings = "^2.5.0"
python-dotenv = "^1.0.0"

# ðŸŽ¯ System Monitoring (Stage 7)
psutil = "^6.1.0"

# ðŸŽ¯ Testing Framework (Stage 9)
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-mock = "^3.12.0"
httpx = "^0.27.0"
pytest-cov = "^5.0.0"

# ðŸŽ¯ Development Tools
black = "^24.0.0"
isort = "^5.13.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"

# ðŸŽ¯ Documentation
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.0"
autoflake = "^2.3.1"
sse-starlette = "^2.3.6"
locust = "^2.37.10"

[tool.poetry.group.dev.dependencies]
ipython = "^8.17.2"
jupyter = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ðŸŽ¯ Code Quality Configuration
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["backend/tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests"
]

# ðŸŽ¯ Coverage Configuration
[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false 